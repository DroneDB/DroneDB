name: Build and Publish Docker Image

on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:
  build_builders:
    name: Build Builder Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['22.04', '24.04']
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: dronedb/builder
        tags: |
          type=raw,value=${{ matrix.version }}
    - name: Build and push Docker builder image
      id: docker_builder_build
      uses: docker/build-push-action@v6
      with:
        context: ./docker/builders
        file: ./docker/builders/Dockerfile-builder-${{ matrix.version }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Image digest
      run: echo ${{ steps.docker_builder_build.outputs.digest }}

  build_app:
    name: Build Application Image
    runs-on: ubuntu-latest
    needs: build_builders
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: dronedb/dronedb
        tags: |
          type=semver,pattern={{version}}
          type=edge,branch=master
    - name: Build and push Docker application image
      id: docker_app_build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./docker/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Image digest
      run: echo ${{ steps.docker_app_build.outputs.digest }}
