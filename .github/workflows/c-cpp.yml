name: C/C++ CI

on:
    push:
        branches: [master]
        tags:
          - 'v*.*.*'
    pull_request:
        branches: [master]

jobs:
    build_ubuntu:
        name: Build/Test on Ubuntu
        runs-on: ubuntu-24.04
        env:
            VCPKG_ROOT: ${{ github.workspace }}/vcpkg
            VCPKG_DEFAULT_TRIPLET: x64-linux
            VCPKG_BUILD_TYPE: release
        steps:
            - name: Free Disk Space
              uses: ShubhamTatvamasi/free-disk-space-action@master
            - uses: actions/checkout@v4
              with:
                submodules: 'recursive'
                fetch-depth: 0
            - name: Info
              run: |
                pwd
                echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
                echo "GITHUB_REF=${GITHUB_REF}"
                echo "GITHUB_REPOSITORY=${GITHUB_REPOSITORY}"
                echo "GITHUB_RUN_ID=${GITHUB_RUN_ID}"
                echo "GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER}"
                echo "GITHUB_SHA=${GITHUB_SHA}"
                ls -la                
            - name: Cache vcpkg
              uses: actions/cache@v4
              with:
                path: ${{ github.workspace }}/vcpkg
                key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
                restore-keys: |
                  ${{ runner.os }}-vcpkg-
            - name: Install Linux dependencies
              run: |
                chmod +x .github/scripts/install-dependencies.sh
                .github/scripts/install-dependencies.sh
            - name: Setup vcpkg
              uses: lukka/run-vcpkg@v11
              with:
                vcpkgDirectory: '${{ github.workspace }}/vcpkg'
                vcpkgJsonGlob: vcpkg.json
            - name: Run CMake
              run: |
                mkdir build
                cd build
                cmake -DVCPKG_OVERLAY_TRIPLETS=${{ github.workspace }}/vcpkg-triplets -DVCPKG_HOST_TRIPLET=x64-linux-release -DVCPKG_TARGET_TRIPLET=x64-linux-release -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ..
            - name: Build C++ lib/program and tests
              run: cd build && cmake --build . -- -j$(nproc)
            - name: Run C++ Tests
              run: cd build && ctest -C Release
            - name: Run Program Smoke Test
              run: cd build && ./ddbcmd --debug
            - name: Build Distribution
              run: cd build && cmake --build . --target exodus_package -- -j$(nproc)
            - name: Upload Distribution Files
              uses: actions/upload-artifact@v4
              with:
                name: Linux-Binaries
                path: build/dist/*.tgz
                retention-days: 90
            - name: Upload Binaries to Release
              uses: svenstaro/upload-release-action@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                repo_token: ${{ secrets.GITHUB_TOKEN }}
                file: build/dist/*.tgz
                file_glob: true
                tag: ${{ github.ref }}
                overwrite: true

    build_windows:
        name: Build/Test on Windows
        runs-on: windows-latest
        env:
            VCPKG_ROOT: ${{ github.workspace }}/vcpkg
            VCPKG_DEFAULT_TRIPLET: x64-windows
            VCPKG_BUILD_TYPE: release
        steps:
            - uses: actions/checkout@v4
              with:
                submodules: 'recursive'
                fetch-depth: 0
            - name: Cache vcpkg
              uses: actions/cache@v4
              with:
                path: ${{ github.workspace }}/vcpkg
                key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
                restore-keys: |
                  ${{ runner.os }}-vcpkg-
            - name: Setup vcpkg
              uses: lukka/run-vcpkg@v11
              with:
                vcpkgDirectory: '${{ github.workspace }}/vcpkg'
                vcpkgJsonGlob: vcpkg.json
            - name: Build C++ lib/program and tests
              run: |
                mkdir build
                cd build
                cmake .. -DVCPKG_HOST_TRIPLET=x64-windows-release -DVCPKG_TARGET_TRIPLET=x64-windows-release -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"
                cmake --build . --config Release --target ALL_BUILD -- /maxcpucount:$env:NUMBER_OF_PROCESSORS
                dir
            - name: Run C++ Tests
              run: cd build && ctest -C Release
              shell: pwsh
            - name: Run Program Smoke Test
              run: cd build && .\ddbcmd.exe --debug
              shell: pwsh
            - name: Create Distribution Files
              shell: pwsh
              run: |
                cd build
                cmake --build . --config Release --target windows_package -- /maxcpucount:$env:NUMBER_OF_PROCESSORS
                dir
            - name: Upload Distribution Files
              uses: actions/upload-artifact@v4
              with:
                name: Windows Binaries
                path: build\dist\*.zip
            - name: Upload Binaries to Release
              uses: svenstaro/upload-release-action@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                repo_token: ${{ secrets.GITHUB_TOKEN }}
                file: build\dist\*.zip
                file_glob: true
                tag: ${{ github.ref }}
                overwrite: true
                
    # build_macos:
    #     name: Build/Test on MacOS
    #     runs-on: macos-latest
    #     steps:
    #         - uses: actions/checkout@v4
    #           with:
    #             submodules: 'recursive'
    #             fetch-depth: 0
    #         - name: Install MacOS dependencies
    #           run: |
    #             chmod +x .github/scripts/install-dependencies.sh
    #             .github/scripts/install-dependencies.sh
    #         - name: Setup vcpkg
    #           uses: lukka/run-vcpkg@v11
    #           with:
    #             vcpkgGitCommitId: acd65983f2e668c0bc44a117575e6073681fa8e3
    #             vcpkgDirectory: '${{ github.workspace }}/vcpkg'
    #             runVcpkgInstall: true
    #         - name: Run CMake
    #           run: |
    #             mkdir build
    #             cd build
    #             cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake ..
    #         - name: Build C++ lib/program and tests
    #           run: cd build && cmake --build . -- -j$(sysctl -n hw.physicalcpu)
    #         - name: Run C++ Tests
    #           run: cd build && ctest -C Release
    #         - name: Run Program Smoke Test
    #           run: cd build && ./ddbcmd --debug
    #         - name: Create Distribution Package
    #           run: cd build && cmake --build . --target exodus_package
    #         - name: Upload Distribution Files
    #           uses: actions/upload-artifact@v4
    #           with:
    #             name: MacOS Binaries
    #             path: build/dist/*.tgz
    #         - name: Upload Binaries to Release
    #           uses: svenstaro/upload-release-action@v2
    #           if: startsWith(github.ref, 'refs/tags/')
    #           with:
    #             repo_token: ${{ secrets.GITHUB_TOKEN }}
    #             file: build/dist/*.tgz
    #             file_glob: true
    #             tag: ${{ github.ref }}
    #             overwrite: true
